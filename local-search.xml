<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>添加自定义HTML页面</title>
    <link href="/2025/06/18/%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89HTML%E9%A1%B5%E9%9D%A2/"/>
    <url>/2025/06/18/%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89HTML%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="添加自定义HTML页面"><a href="#添加自定义HTML页面" class="headerlink" title="添加自定义HTML页面"></a>添加自定义HTML页面</h1><h2 id="步骤与说明"><a href="#步骤与说明" class="headerlink" title="步骤与说明"></a>步骤与说明</h2><ol><li><code>hexo new page 页面名称</code> 创建新的页面。在source目录下会生成一个文件夹，文件夹里有个index.md。</li><li>可以自定义一个layout，然后在index.md里编写新页面。这种方式适合创建一类页面，以后都用自定义的layout。layout目录位于主题目录下。</li><li>也可以改用index.html，在Front-matter里写上<code>layout: false</code>，这样就可以完全自定义页面了，不会因为hexo的默认行为产生混乱。</li></ol><p><strong>实践：</strong> 参见我用Deepseek写的<a href="http://lixiang.us.kg/snake" title="http:&#x2F;&#x2F;lixiang.us.kg&#x2F;snake">贪吃蛇</a>，源文件位于<a href="https://github.com/weimoyo/weimoyo.github.io/tree/gh-source/source/snake" title="Github" target="_blank" rel="noopener noreferrer"><i class="iconfont icon-github-fill"></i></a></p>]]></content>
    
    
    <categories>
      
      <category>实践指南</category>
      
      <category>大东西</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>工具</tag>
      
      <tag>实践</tag>
      
      <tag>Hexo</tag>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🐳docker使用笔记</title>
    <link href="/2025/06/17/docker%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <url>/2025/06/17/docker%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="🐳docker使用笔记"><a href="#🐳docker使用笔记" class="headerlink" title="🐳docker使用笔记"></a>🐳docker使用笔记</h1><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><h3 id="运行Dockerfile时“permission-denied”"><a href="#运行Dockerfile时“permission-denied”" class="headerlink" title="运行Dockerfile时“permission denied”"></a>运行Dockerfile时“permission denied”</h3><p><strong>部分报错：</strong><code>ERROR: permission denied while trying to connect to the Docker daemon socket</code><br><strong>解决方法：</strong></p><ul><li><code>sudo usermod -aG docker $USER</code></li><li>需注销或重启才能生效，为的是让shell使用docker组的权限</li><li>或为当前终端临时添加权限，<code>newgrp docker</code></li><li>可以用<code>groups</code>指令看当前shell是否拥有docker权限</li></ul>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🕷️markdown语法笔记</title>
    <link href="/2025/06/16/markdown%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    <url>/2025/06/16/markdown%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="🕷️markdown语法笔记"><a href="#🕷️markdown语法笔记" class="headerlink" title="🕷️markdown语法笔记"></a>🕷️markdown语法笔记</h1><h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><ol><li>行内链接：<code>[显示文本](链接地址 &quot;可选标题&quot;)</code></li><li>引用式链接：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">[<span class="hljs-string">显示文本</span>][<span class="hljs-symbol">链接标识</span>]<br><br>[<span class="hljs-symbol">链接标识</span>]: <span class="hljs-link">链接地址 &quot;可选标题&quot;</span><br></code></pre></td></tr></table></figure></li><li>直接显示URL：<code>&lt;https://markdown.org&gt;</code></li><li>图片链接：<code>[![图片替代文本](图片URL)](链接地址)</code></li></ol><h3 id="emoji"><a href="#emoji" class="headerlink" title="emoji"></a>emoji</h3><ul><li><code>win + .</code>打开系统自带的emoji搜索</li><li><a href="https://www.emojiall.com/zh-hans">emoji中文网</a>等复制粘贴</li><li>使用标签符号简码，需要安装Markdown Emoji插件，语法<code>:joy:</code>，效果:joy:。（此方法hexo不支持）</li><li>fluid主题内置了一些图标，在配置about页的时候用到了，在文档里也可以如<code>&lt;i class=&quot;iconfont icon-github-fill&quot;&gt;&lt;/i&gt;</code>的方式使用，带链接的方式：<ul><li><code>[&lt;i class=&quot;iconfont icon-github-fill&quot;&gt;&lt;/i&gt;](https://github.com/weimoyo/weimoyo.github.io/tree/gh-source/source/snake)</code></li><li><code>&lt;a href=&quot;https://github.com/weimoyo/weimoyo.github.io/tree/gh-source/source/snake)&quot; title=&quot;GitHub&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;i class=&quot;iconfont icon-github-fill&quot;&gt;&lt;/i&gt;&lt;/a&gt;</code></li></ul></li><li>fluid内置的图标的便捷使用方式，添加一个图标插件：<ol><li>在主题目录的scripts目录里创建一个icon.js，内容如下 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">tag</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;icon&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">args</span>) &#123;<br><span class="hljs-keyword">const</span> iconClass = args[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">const</span> link = args[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">const</span> tip = args[<span class="hljs-number">2</span>];<br><br><span class="hljs-keyword">if</span> (!iconClass) &#123;<br>   <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>&#125;<br><br><span class="hljs-comment">// 智能判断基础类</span><br><span class="hljs-keyword">let</span> baseClass = <span class="hljs-string">&#x27;iconfont&#x27;</span>; <span class="hljs-comment">// 默认是 iconfont</span><br><span class="hljs-keyword">if</span> (iconClass.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">&#x27;fa-&#x27;</span>)) &#123;<br>   baseClass = <span class="hljs-string">&#x27;fa&#x27;</span>; <span class="hljs-comment">// 如果以 fa- 开头，则是 Font Awesome</span><br>&#125;<br><br><span class="hljs-keyword">let</span> iconHtml = <span class="hljs-string">`&lt;i class=&quot;<span class="hljs-subst">$&#123;baseClass&#125;</span> <span class="hljs-subst">$&#123;iconClass&#125;</span>&quot;&gt;&lt;/i&gt;`</span>;<br><br><span class="hljs-keyword">if</span> (link) &#123;<br>   <span class="hljs-keyword">const</span> titleAttr = tip ? <span class="hljs-string">`title=&quot;<span class="hljs-subst">$&#123;tip&#125;</span>&quot;`</span> : <span class="hljs-string">&#x27;&#x27;</span>;<br>   iconHtml = <span class="hljs-string">`&lt;a href=&quot;<span class="hljs-subst">$&#123;link&#125;</span>&quot; <span class="hljs-subst">$&#123;titleAttr&#125;</span> target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;<span class="hljs-subst">$&#123;iconHtml&#125;</span>&lt;/a&gt;`</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> iconHtml;<br>&#125;);<br></code></pre></td></tr></table></figure></li><li>三种使用方式<ul><li>只显示图标<code>&#123;% icon icon-github-fill %&#125;</code>:<i class="iconfont icon-github-fill"></i></li><li>带链接的图标<code>&#123;% icon icon-github-fill https://github.com/weimoyo %&#125;</code>:<a href="https://github.com/weimoyo"  target="_blank" rel="noopener noreferrer"><i class="iconfont icon-github-fill"></i></a></li><li>带链接和提示的图标<code>&#123;% icon icon-github-fill https://github.com/weimoyo GitHub %&#125;</code>:<a href="https://github.com/weimoyo" title="GitHub" target="_blank" rel="noopener noreferrer"><i class="iconfont icon-github-fill"></i></a></li></ul></li></ol></li></ul>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>🐙x-cmd实践记录</title>
    <link href="/2025/06/16/x-cmd%E5%AE%9E%E8%B7%B5%E8%AE%B0%E5%BD%95/"/>
    <url>/2025/06/16/x-cmd%E5%AE%9E%E8%B7%B5%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="🐙x-cmd实践记录"><a href="#🐙x-cmd实践记录" class="headerlink" title="🐙x-cmd实践记录"></a><a href="https://cn.x-cmd.com/">🐙x-cmd</a>实践记录</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在powershell里安装，参考<a href="https://cn.x-cmd.com/start/powershell">https://cn.x-cmd.com/start/powershell</a>，只需要运行一条指令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">[<span class="hljs-type">System.Text.Encoding</span>]::GetEncoding(<span class="hljs-string">&quot;utf-8&quot;</span>).GetString(<span class="hljs-variable">$</span>(<span class="hljs-built_in">Invoke-WebRequest</span> <span class="hljs-literal">-Uri</span> <span class="hljs-string">&quot;https://get.x-cmd.com/x-cmd.ps1&quot;</span>).RawContentStream.ToArray()) | <span class="hljs-built_in">Invoke-Expression</span><br></code></pre></td></tr></table></figure><h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><ol><li><code>x starship</code>和<code>x ohmyposh</code>是两个主题模块，直接运行即可打开TUI交互选择。</li><li>需要安装<a href="https://www.nerdfonts.com/font-downloads">Nerd Fonts</a>，否则图标无法正常显示。推荐选择（gemini 2.5 pro），<ul><li>FiraCode Nerd Font (非常流行，支持编程连字)</li><li>JetBrains Mono Nerd Font (JetBrains IDE 的默认字体，非常清晰)</li><li>MesloLGS NF (Powerlevel10k 主题官方推荐，兼容性极佳)</li></ul></li><li>效果，<img src="https://pub-85c6ace1f3f74dfdbd0f332fbb2c2f97.r2.dev/PicGo/starship%E6%95%88%E6%9E%9C.png" alt="starship效果"></li></ol><h2 id="使用大模型，以Deepseek为例"><a href="#使用大模型，以Deepseek为例" class="headerlink" title="使用大模型，以Deepseek为例"></a>使用大模型，以Deepseek为例</h2><ol><li><code>x deepseek init</code>进行交互式配置，只需要提供key。</li><li><code>a:ds</code>和<code>a:dsr1</code>使用<ul><li>对话<code>a:ds &quot;用户提示词&quot;</code></li><li><code>a:ds -f 本地文件 &quot;用户提示词&quot;</code></li></ul></li><li><code>a:ds -f 本地文件 &quot;用户提示词&quot; &gt;&gt; ds.md 2&gt;&amp;1</code>可以输出到文档里，但是中文会乱码<ul><li><strong>原因：</strong> PowerShell 7 查看 <code>[System.Console]::OutputEncoding</code> 的设置，发现是 GBK。于是，它用 GBK 的规则去“错误地”解码了这串 UTF-8 的字节流，在内存中得到了一堆乱码字符串。</li><li><strong>解决方法：</strong>  <ol><li>修改powershell配置文件 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">notepad <span class="hljs-variable">$PROFILE</span><br>如果不存在，新建<br><span class="hljs-built_in">New-Item</span> <span class="hljs-literal">-Path</span> <span class="hljs-variable">$PROFILE</span> <span class="hljs-literal">-ItemType</span> File <span class="hljs-literal">-Force</span><br></code></pre></td></tr></table></figure>在最后一行添加<code>[System.Console]::OutputEncoding = [System.Text.Encoding]::UTF8</code></li><li>使用管道<code>a:ds -f 本地文件 &quot;用户提示词&quot; 2&gt;&amp;1 | Out-File -FilePath ds.md -Encoding utf8</code>(尚未验证，不过原理可信)</li></ol></li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>实践指南</category>
      
      <category>大东西</category>
      
      <category>x-cmd</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>工具</tag>
      
      <tag>实践</tag>
      
      <tag>x-cmd</tag>
      
      <tag>终端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>远程连接win11主机</title>
    <link href="/2025/06/09/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5win11%E4%B8%BB%E6%9C%BA/"/>
    <url>/2025/06/09/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5win11%E4%B8%BB%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="远程连接win11主机"><a href="#远程连接win11主机" class="headerlink" title="远程连接win11主机"></a>远程连接win11主机</h1><h2 id="ssh（仅命令行）"><a href="#ssh（仅命令行）" class="headerlink" title="ssh（仅命令行）"></a>ssh（仅命令行）</h2><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><ul><li><p>服务端防火墙要配置<strong>入站规则</strong>，开放22端口。</p></li><li><p>客户端的公钥应该放在哪。</p><p><strong>ChatGPT o3:</strong></p><blockquote><p><strong>管理员账户</strong>必须把公钥写入 <code>C:\ProgramData\ssh\administrators_authorized_keys</code><a id="note1">​<sup>1</sup></a>。<br><strong>非管理员账户</strong>用 <code>%USERPROFILE%\.ssh\authorized_keys</code><a id="note2">​<sup>2</sup></a>。</p></blockquote><p>事实证明这一点不准确，FixedIdiot上的weimo账户不被认为是管理员账户，但是放在<a href="#note2">2</a>没有效果，放在<a href="#note1">1</a>却可以。我估计是因为判断标准是<strong>用户组</strong>，weimo在Administrators用户组里。</p></li></ul><h2 id="RDP（微软远程连接，图形化界面）"><a href="#RDP（微软远程连接，图形化界面）" class="headerlink" title="RDP（微软远程连接，图形化界面）"></a>RDP（微软远程连接，图形化界面）</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p><strong>Win11 服务器端</strong></p><p> “设置 → 系统 → 远程桌面 → 打开”，记下计算机名并确认用户在“<strong>远程桌面用户</strong>”名单内。</p></li><li><p><strong>Win10 客户端</strong><br> 运行 <code>mstsc</code>​ → 输入服务器名&#x2F;IP:PORT。</p></li><li><p><strong>Tips</strong></p><ul><li>要想校园网可以访问实验室网络（校园网的内网）内的主机，则需要配置一下端口映射3389、TCP协议。</li><li>与其他远程桌面、多端协同的工具可能会产生冲突，例如同时Mouse without Boarders会导致鼠标消失。</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>实践指南</category>
      
      <category>小玩意</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>工具用法</tag>
      
      <tag>实践指南</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>不想干活，趁着新鲜劲再写点东西</title>
    <link href="/2025/06/06/%E4%B8%8D%E6%83%B3%E5%B9%B2%E6%B4%BB%EF%BC%8C%E8%B6%81%E7%9D%80%E6%96%B0%E9%B2%9C%E5%8A%B2%E5%86%8D%E5%86%99%E7%82%B9%E4%B8%9C%E8%A5%BF/"/>
    <url>/2025/06/06/%E4%B8%8D%E6%83%B3%E5%B9%B2%E6%B4%BB%EF%BC%8C%E8%B6%81%E7%9D%80%E6%96%B0%E9%B2%9C%E5%8A%B2%E5%86%8D%E5%86%99%E7%82%B9%E4%B8%9C%E8%A5%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="不想干活，趁着新鲜劲再写点东西"><a href="#不想干活，趁着新鲜劲再写点东西" class="headerlink" title="不想干活，趁着新鲜劲再写点东西"></a>不想干活，趁着新鲜劲再写点东西</h1><p>最近一直在做大模型语义缓存的项目，我总有种“不实”的感觉。这件事情最早两三年前就已经有人在做，但是目前市场上依然没看到有一个成熟的方案。我们给出的方案也依然是依葫芦画瓢，没有解决核心问题，或者说，我们目前搞不清楚什么是核心问题。不过我不想谈论烦心事，因为这种小事很难掩盖我拥有个人博客的喜悦。</p><p>我想说一说开心的事情。前阵子打乒乓球认识了一个管院的男生，很符合我对管理学专业的刻板印象，说起话来一股子擅长pua的公司老板的气息。他总是试图将他的暴论灌输给我，我其实很需要这样的挑战。以往我的社交面很窄，这给我带来了很多的困扰，但当我的人生开始踏入新的阶段，我非常渴望改变。我与人的联系除了发生在实验室，也随着我的爱好，比如打乒乓球，逐渐扩充。在乒乓球以外的另一个场景，我面临着更加严峻的挑战，所以我非常乐意有练手的机会。他似乎也对隔三差五的争论很感兴趣，一来二去我们居然也成了不错的朋友。与我每天相对固定的生活轨迹不同，他经常参加各类社交活动，露营、桌游，有时也会叫上我。我意识到这就是我想象中通过少量的中继节见识到更多节点的交友方式，这让我转变对他的对抗态度——他也许是我研究生阶段的贵人。</p><p>今天把成功让我的笔记本也可以写blog了，这种统一感还是很舒服的。</p><p>从实验室回来吃饭，准备晚上去打球，电梯口遇到了过去的室友，他即将读博。一直以来我害怕碰到他们，人家出于礼貌的寒暄会让我很尴尬。但我觉得我应该更坦荡一些，比起别人我确实浪费了三年的时间。但是我不应该觉得羞愧，我的朋友们也不会因为这个而轻视我。更何况，我现在面对的是全新的人生，积极向上的生活本身就充满了力量，足以抵抗也许会存在的闲言碎语。</p><p>开头这几篇blog杂乱宽泛，我不应该把blog当做草稿，而应当是成熟完整的文章，所以我以后尽可能给每一篇设计好一个固定的主题，做一些有深度的思考。</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
      <category>日志</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
      <tag>日志</tag>
      
      <tag>记录</tag>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>晚安，世界</title>
    <link href="/2025/06/06/%E6%99%9A%E5%AE%89%EF%BC%8C%E4%B8%96%E7%95%8C/"/>
    <url>/2025/06/06/%E6%99%9A%E5%AE%89%EF%BC%8C%E4%B8%96%E7%95%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="晚安，世界"><a href="#晚安，世界" class="headerlink" title="晚安，世界"></a>晚安，世界</h1><p>现在是0:30，我本已下决心不再熬夜，但在我又一次听到个人域名的想法，我决定行动起来。从大约十点，一直到现在，我申请了lixiang.us.kg这个域名，创建了cloudflare上的图床，用hexo创建并上传第一篇博客到github。一切都打通以后，我跟着教程安装了第一个个性化主题——Fluid。非常感谢B站up主陶渊xiao明，他的三个视频完美解决了我的大多数问题。</p><p>个人博客给我的感受与本地的日记完全不同，它提供了一丝可能性，就像是黑暗的房子裂开了一道缝隙，传进来的光或许很小，但它改变了一切。在本地的笔记里，只有一个角色。回想起来，我已经很久没有好好写过日记。与自己交流的方式从与幻想的日记精灵对话变成了更加现实、冷峻地与自己对话，偶尔的散步成为了全部审视自身的时间。这个岁数我已很难沉浸到过去那种深度的幻想世界里，我无法对着本子或者屏幕虚构出一个听我诉说的朋友，我并不是觉得可笑，而是真的无法代入。这感觉就像是，我18年玩到第一部3A（刺客信条：起源）时，兴奋到梦里都是那个世界，但是面对去年的刺客信条：幻景，我已经无法忽视它的各种缺点。对，就是这样，如果我要在面前虚构一个朋友，我会不由自主地想到这件事情的不合理性（疑点）。就比如我会觉得虚构的朋友是孩童特有的心理现象，我感觉这也许是精神分析学的研究范畴。</p><p>不过不用去管那些事情，无关紧要。现在我的对面是无比真实的世界，而且我们的连接是最浪漫的方式之一——有限、偶然。这又让我充满了动力。</p><p>在我行动之前我对个人博客很怀疑，我分析不出它与本地日志有什么本质区别。这种怀疑在我准备关机回宿舍的一瞬间被彻底打消，看到Fluid这个主题氛围，我决定让我的博客以一个有仪式感的方式出现。《晚安，世界》这个念头蹦出来的时候，我感受到了那种随机却精准的推理方式——这个题目本只是为了说明夜深了，但却在与世界的第一次连接到意义上十分合适。</p><p>晚安，世界，明天见。</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
      <category>日志</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈</tag>
      
      <tag>日志</tag>
      
      <tag>记录</tag>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
